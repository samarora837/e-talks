<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.1.xsd
		
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

	<context:component-scan base-package="com.miprofe.controller" />
	
		<!-- i18n Config with Spring  Start-->
	
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
			p:paramName="lang" />
	</mvc:interceptors>

	<!-- Declare the Resolver -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<!--<property name="defaultLocale" value="en" />
	--></bean>


	<!-- Register the welcome.properties -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>miprofe</value>
			</list>
		</property>
	</bean>
	
	<!-- i18n Config with Spring  END -->
	
	

	<!-- To enable @RequestMapping process on type level and method level -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="defaultContentType" value="text/html" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorPathExtension" value="true" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<!-- <entry key="xml" value="application/xml" /> -->
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
			</list>
		</property>
		<!--<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller" ref="jaxbMarshaller" />
				</bean>
				
			</list>
		</property>
	--></bean>

	<!-- Message Convertors -->

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">

		<property name="messageConverters">
			<util:list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
			</util:list>
		</property>
	</bean>
	
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	
	<!-- <bean id="marshallingHttpMessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"> -->
		<!--<property name="marshaller" ref="jaxbMarshaller" />
		<property name="unmarshaller" ref="jaxbMarshaller" />
	--><!-- </bean> -->
	
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">

		<property name="objectMapper">
			<bean class="org.codehaus.jackson.map.ObjectMapper">
				<property name="serializationInclusion" value="NON_NULL" />
			</bean>
		</property>
	</bean>
	


	<!-- Reading values from properties file -->
	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
				<value>classpath:hibernate.properties</value>
				<value>classpath:log4j.properties</value>
				<value>classpath:smtp.properties</value>
				<value>classpath:miprofe.properties</value>
				<value>classpath:paypal.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
 

   <property name="freemarkerSettings">
        <props>
            <prop key="auto_import">mail-template.ftl as spring</prop>
        </props>
   </property>
</bean>
	<!--<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">

		<property name="classesToBeBound">
			<list>
				<value>com.miprofe.entities.User</value>
			</list>
		</property>
	</bean>

--></beans>
